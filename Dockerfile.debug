# Stage 1: Build de l'application Angular
FROM node:20-alpine AS builder

WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
RUN npm run build -- --configuration=production

# Debug: Vérifier le contenu du build
RUN echo "=== Contenu de /app/dist ===" && ls -la /app/dist/
RUN echo "=== Contenu de /app/dist/retro-nova-backoffice ===" && ls -la /app/dist/retro-nova-backoffice/ || echo "Le dossier retro-nova-backoffice n'existe pas"
RUN echo "=== Recherche de index.html ===" && find /app/dist -name "index.html" -type f

# Stage 2: Serveur Nginx
FROM nginx:alpine

# Supprimer toutes les configurations par défaut
RUN rm -rf /usr/share/nginx/html/*
RUN rm -rf /etc/nginx/conf.d/*

# Copier les fichiers buildés
COPY --from=builder /app/dist/retro-nova-backoffice /usr/share/nginx/html

# Debug: Vérifier le contenu copié
RUN echo "=== Contenu final de /usr/share/nginx/html ===" && ls -la /usr/share/nginx/html/
RUN echo "=== Vérification index.html ===" && ls -la /usr/share/nginx/html/index.html || echo "index.html manquant!"

# Créer un index.html de test si nécessaire
RUN if [ ! -f /usr/share/nginx/html/index.html ]; then \
      echo "<h1>Test - Les fichiers Angular ne sont pas copiés correctement</h1>" > /usr/share/nginx/html/index.html; \
    fi

# Configuration nginx simple pour debug
RUN echo 'server { listen 80; root /usr/share/nginx/html; index index.html; location / { try_files $uri $uri/ /index.html; } }' > /etc/nginx/conf.d/default.conf

# Debug: Afficher la config nginx
RUN echo "=== Config nginx ===" && cat /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
